<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
    <%-include('header')%>
    
  <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script> -->
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML"></script>

  </script>
  </head>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
</head>
<style>
  .screen{
    background-color:#e9f1e8;
    /* border: 1px solid black; */
    /* height: 200px; */
    width: 100%;
    padding: 20px;
  }
  .imgSm{
    width: 50px;
    height: 50px;
  }
  .imgSmS{
    width: 50px;
    height: 50px;
    color: #00ffff;
    /* margin: 12px; */
  }
  .imageSelected{
    border: 3px solid blue;
  }
  .imgSmM{
    width: 100px;
    height: 100px;
    /* margin: 12px; */
  }
  .imgSmL{
    width: 100%;
    display: block;
    max-height: 220px;
  }
  
</style>
<body>
    <%-include('../appBar')%>
    <br>
    <div class="container">
<div class="tags">
  <button class="btn btn-sm  btn-danger" onclick="bold()">Bold</button>
  <button class="btn btn-sm  btn-danger" onclick="heading()">Heading</button>
  <button class="btn btn-sm  btn-danger" onclick="subHeading()">Sub-Heading</button>

</div>
<br>
      <div class="maths">
<button class="btn btn-sm  btn-info" onclick="divideOperator()">/</button>
<button class="btn btn-sm  btn-info" onclick="sqrt()">√</button>
<button class="btn btn-sm  btn-info" onclick="sqr()">㎡</button>
<button class="btn btn-sm  btn-info" onclick="notEql()">≠</button>
<button class="btn btn-sm  btn-info" onclick="sameLineEquation()">same line equation</button>
<button class="btn btn-sm  btn-info" onclick="mutiLineEquation()">mutiLine equation</button>
<br><br>
<p>Type math here: <span id="math-field" style="min-width: 100px;"></span></p>
<p>Code to copy:   <span id="latex"></span></p> 

</div>
<br>
<div class="row">
        <div class="col-12 col-md-8">  
          
          <div class="form-group">
            <label for="text">Enter Notes</label>
            <textarea class="form-control" id="text" rows="8"></textarea>
          
          
          </div>
        

            <br>
            <input type="file" id="photo" />
            
            <!-- <button onclick="uploadImage()">Upload Image</button> -->
          <br><br>
          <div id="imageViewer"></div>
          
          <p>Image Properties</p>
          <select class="form-control" id="size" name="size">
            <option value="S">small</option>
            <option value="M">medium</option>
            <option value="L">large</option>
          </select>
          <br> 
<button onclick="add()" class="btn btn-success">Add Image</button>
<br><br>
          </div>
        <div class="col-12 col-md-4 screen">
  <div id="viewer"></div>
          
  
          </div>
        </div>
      
      
      </div>
    

    </div>
      
  
</body>
<script defer src="js/addNotes.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/caret/1.3.7/jquery.caret.min.js" integrity="sha512-DR6H+EMq4MRv9T/QJGF4zuiGrnzTM2gRVeLb5DOll25f3Nfx3dQp/NlneENuIwRHngZ3eN6w9jqqybT3Lwq+4A==" crossorigin="anonymous"></script>
<script src="https://www.gstatic.com/firebasejs/7.7.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/7.7.0/firebase-storage.js"></script>

  <link rel="stylesheet" href="mathquill-0.10.1/mathquill.css"/>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
  <script src="mathquill-0.10.1/mathquill.js"></script>

<script>
     var firebaseConfig = {
    apiKey: "AIzaSyDuygQMOc1RYZrdv1mb4Wzn9B9Bq_RWn18",
    authDomain: "testination-e6442.firebaseapp.com",
    databaseURL: "https://testination-e6442.firebaseio.com",
    projectId: "testination-e6442",
    storageBucket: "testination-e6442.appspot.com",
    messagingSenderId: "244418241418",
    appId: "1:244418241418:web:faf39ef6d1582f76a6de73",
    measurementId: "G-2D2S943ZFE"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  var storage = firebase.storage();

//   toAdd="<span><img src='"+gsReference+" 'class='imgSm'>";
// $('#imageViewer').append(toAdd);


  // var images=["https://firebasestorage.googleapis.com/v0/b/testination-e6442.appspot.com/o/addNotes%2F2020%2F11%2F1608354356735-WhatsApp%20Image%202020-12-16%20at%2010.13.26%20AM.jpeg?alt=media&token=e45b0308-1b60-46f8-949a-ff1364272982","https://firebasestorage.googleapis.com/v0/b/testination-e6442.appspot.com/o/addNotes%2F2020%2F11%2F1608322004828-WhatsApp%20Image%202020-12-16%20at%2010.13.26%20AM.jpeg?alt=media&token=c21777d6-c35e-4d22-b30d-93ee8f18aebf"];
  var images=[];
  var imagesMap = {};

  function uploadImage() {
        var d = new Date();
var m = d.getMonth();
var y = d.getFullYear();
      const ref = firebase.storage().ref("addNotes/"+ y+"/"+m);
      const file = document.querySelector("#photo").files[0];
      const name = +new Date() + "-" + file.name;
      const metadata = {
        contentType: file.type
      };
      const task = ref.child(name).put(file, metadata);
      task
        .then(function(snapshot){ 
          // console.log("full path :  "+snapshot.ref.fullPath);
          // images.push(snapshot.ref.fullPath);
          // buildImages();
          return snapshot.ref.getDownloadURL()})
        .then(url => {
          console.log(url);
          images.push(url);
          buildImages();
        //   document.querySelector("#image").src = url;
        })
        .catch(console.error);
    }
    $("#photo").change(function(){
      var imageSize=parseInt($("#photo")[0].files[0].size);
if(imageSize/1000<200){
   uploadImage();
}else{
  alert('image must be less than 200 kb ');
}
   
        });

  var text="";
  var cursor;
  var btnSelected=0;
  $("#text").click(function(e){
    cursor=e.target.selectionStart+1;
    // alert(cursor)
  });
  $("#text").keyup(function(e){
    text=$('#text').val();
    cursor=e.target.selectionStart-1;
    if (e.key === 'Enter' || e.keyCode === 13) {
         var a =  text.slice(0, cursor);
      var b =  text.slice(cursor);
    document.execCommand("insertText", false, " <br> ");
       cursor=cursor+4;
  // console.log('Caret at: ', );
    }
    buildScreenViewer();
});

// \ba\w+l\b
 async function buildScreenViewer(){
  var toAdd='';
  text=$('#text').val();
  var imageAddedString='';
  var imgL=text.split(/\!\!/);
  var str   = 'asd-0.testing';
var regex = /\!\!/;
if (text.match(regex)) {
  text = text.replace(regex, "$1" + "1" + "$2");
}
console.log(imgL);

var toReturnList=[];
  for(var i in imgL) {
    var entry=imgL[i];
    if(entry.slice(0,4)=='<img'){
      var imgSplitImageTag=entry.split(/src\=\'(.*)\'\s/gs); 
 var objectKey=''+imgSplitImageTag[1];
      var url=imagesMap[objectKey];
      if(url==null){
      // var url=await imageLink(imgSplitImageTag[1]);
      var url=imgSplitImageTag[1];
      imagesMap[objectKey]=url;
      }

      var s="<img src='"+url+"'"+imgSplitImageTag[2];
      // var s=imgL[1];
      toReturnList.push(s)
    }else{
      toReturnList.push(entry)
    }
  }

  console.log(toReturnList.join(''));





  $("#viewer").empty();
    toAdd="<p>"+imageAddedString+"</p>"
  
  var $el = $('#viewer')
  $el.empty()
  // $el.append('<span>\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span>')
  $('#viewer').append( toReturnList.join(' '));
  MathJax.Hub.Queue(['Typeset', MathJax.Hub, $el[0]]);

}
async function buildImages(){
  $("#imageViewer").empty();
  
  for(var i in images){
    // var imgLink=await imageLink(images[i]);
    if(btnSelected==i){
      toAdd="<span><img src='"+images[i]+" 'class='defaultImg img"+i+" imgSm imageSelected' onclick='imageButtonClick("+i+")'>";
    }else{
      toAdd="<span><img src='"+images[i]+" 'class='defaultImg img"+i+" imgSm' onclick='imageButtonClick("+i+")'>";

    }
$('#imageViewer').append(toAdd);
  }
}
buildImages();
//add image
function add(){
 var size= $('#size').val();
  var i=btnSelected;
  var a =  text.slice(0, cursor+1);
      var b =  text.slice(cursor+1);
      //  $('#text').val( a+"<img"+size+pad(i)+"/>"+b);
       var img="!!<img src='"+images[btnSelected]+"'  class='imgSm"+size+"'>!!";
       text= a+' '+img+' '+b;

       document.execCommand("insertText", false, img);

    //  build image after converting code 
       buildScreenViewer();
}

function pad(d) {
    return (d < 10) ? '0' + d.toString() : d.toString();
}

function imageButtonClick(i){
  $( ".defaultImg" ).removeClass( "imageSelected" )
  $( ".img"+i ).addClass( "imageSelected" )

  btnSelected=i;
  // buildImages();
  // imageSelected
}

async function imageLink(ref){
  // console.log(ref);
  // console.log('gs://testination-e6442.appspot.com/'+ref);
  var gsReference = storage.refFromURL('gs://testination-e6442.appspot.com/'+ref)
var url='';
try{
  url =await gsReference.getDownloadURL();
  // console.log(url);
}catch(e){}
return url;

}



var mathFieldSpan = document.getElementById('math-field');
var latexSpan = document.getElementById('latex');

var MQ = MathQuill.getInterface(2); // for backcompat
var mathField = MQ.MathField(mathFieldSpan, {
  spaceBehavesLikeTab: true, // configurable
  handlers: {
    edit: function() { // useful event handlers
      latexSpan.textContent = mathField.latex(); // simple API
    }
  }
});


</script>
</html>